# Створюємо функцію:
def caching_fibonacci():
    # Створюємо порожній словник (наш кеш):
    cache = {}
    # Створюєму функцію, яка приймає число та надаємо віповідні умови її виконання:
    def fibonacci(n):
        # Якщо число менше або дорівнює 0, то повертаємо 0;
        if n <= 0:
            return 0
        # Якщо число дорівнює 1, то повертаємо 1;
        elif n == 1:
            return 1
        # Пеервіряємо, чи число є в словнику (в кеші):
        elif n in cache:
            # то повертаємо значення по ключу числа в словник. Тобто {2: 1, 3: 2, 4: 3,...}
            return cache[n]
        else:
            # Обчислюємо число Фібоначчі для n за допомогою рекурсії та зберігаємо у кеші:
            cache[n] = fibonacci(n - 1) + fibonacci(n - 2)
            # print(cache[n]) - для візуального спостережння, як створюється кеш.
        # та повертаємо обчислення значення для n:
            return cache[n]
    # Повертаємо функції в якій міститься кеш або не міститься:
    return fibonacci
# Отримуємо функцію fibonacci:
fib = caching_fibonacci()
# Використовуємо функцію fibonacci для обчислення чисел Фібоначчі:
print(fib(10))
print("--" * 20)
print(fib(10))